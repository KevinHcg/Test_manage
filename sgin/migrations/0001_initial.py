# Generated by Django 4.0.3 on 2022-07-27 02:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Demand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(max_length=20)),
                ('version', models.CharField(max_length=64)),
                ('state', models.CharField(max_length=20)),
                ('priority', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=256, unique=True)),
                ('product_manager', models.CharField(max_length=20)),
                ('describe', models.CharField(max_length=600, null=True)),
                ('prd_expected_start_time', models.DateTimeField(blank=True, null=True)),
                ('prd_actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('prd_expected_completion_time', models.DateTimeField(blank=True, null=True)),
                ('prd_actual_completion_time', models.DateTimeField(blank=True, null=True)),
                ('prd', models.CharField(max_length=256, null=True)),
                ('front_end_developer', models.CharField(max_length=20, null=True)),
                ('front_end_expected_start_time', models.DateTimeField(blank=True, null=True)),
                ('front_end_actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('front_end_expected_completion_time', models.DateTimeField(blank=True, null=True)),
                ('front_end_actual_completion_time', models.DateTimeField(blank=True, null=True)),
                ('backend_developers', models.CharField(max_length=20, null=True)),
                ('backend_expected_start_time', models.DateTimeField(blank=True, null=True)),
                ('backend_actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('backend_expected_completion_time', models.DateTimeField(blank=True, null=True)),
                ('backend_actual_completion_time', models.DateTimeField(blank=True, null=True)),
                ('combined_commissioning_expected_start_time', models.DateTimeField(blank=True, null=True)),
                ('combined_commissioning_actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('combined_commissioning_expected_completion_time', models.DateTimeField(blank=True, null=True)),
                ('combined_commissioning_actual_completion_time', models.DateTimeField(blank=True, null=True)),
                ('expected_measure_time', models.DateTimeField(blank=True, null=True)),
                ('measure_time', models.DateTimeField(blank=True, null=True)),
                ('write_cases', models.CharField(max_length=256, null=True)),
                ('cases_expected_start_time', models.DateTimeField(blank=True, null=True)),
                ('cases_actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('cases_expected_completion_time', models.DateTimeField(blank=True, null=True)),
                ('cases_actual_completion_time', models.DateTimeField(blank=True, null=True)),
                ('test_expected_start_time', models.DateTimeField(blank=True, null=True)),
                ('test_actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('test_expected_completion_time', models.DateTimeField(blank=True, null=True)),
                ('test_actual_completion_time', models.DateTimeField(blank=True, null=True)),
                ('tester', models.CharField(max_length=256, null=True)),
                ('position', models.CharField(max_length=256, null=True)),
                ('time_consuming', models.CharField(max_length=256, null=True)),
                ('total_cases', models.CharField(max_length=256, null=True)),
                ('executed_cases', models.CharField(max_length=256, null=True)),
                ('invalid_cases', models.CharField(max_length=256, null=True)),
                ('pass_cases', models.CharField(max_length=256, null=True)),
                ('bug_total', models.CharField(max_length=256, null=True)),
                ('level_1', models.CharField(max_length=256, null=True)),
                ('level_2', models.CharField(max_length=256, null=True)),
                ('level_3', models.CharField(max_length=256, null=True)),
                ('level_4', models.CharField(max_length=256, null=True)),
                ('main_problems', models.CharField(max_length=1000, null=True)),
                ('suggested_optimization', models.CharField(max_length=256, null=True)),
                ('remaining_problems', models.CharField(max_length=1000, null=True)),
                ('problem_level', models.CharField(max_length=1000, null=True)),
                ('problem_types', models.CharField(max_length=1000, null=True)),
                ('solutions', models.CharField(max_length=1000, null=True)),
                ('risk', models.CharField(max_length=256, null=True)),
                ('file_id', models.CharField(max_length=50)),
                ('file_name', models.CharField(max_length=50)),
                ('path', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('summary', models.CharField(max_length=1000)),
                ('environment', models.CharField(max_length=1000)),
                ('address', models.CharField(max_length=256)),
                ('limits', models.IntegerField(default=100)),
                ('status', models.BooleanField(default=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('phone', models.CharField(max_length=11, unique=True)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_name', models.CharField(max_length=256)),
                ('event_id', models.CharField(max_length=256, null=True)),
                ('version_name', models.CharField(max_length=20, null=True)),
                ('test_range', models.CharField(max_length=1000, null=True)),
                ('model_configuration', models.CharField(max_length=1000)),
                ('ip_address', models.CharField(max_length=1000)),
                ('operating_system', models.CharField(max_length=1000)),
                ('instructions', models.CharField(max_length=1000)),
                ('software_version', models.CharField(max_length=1000)),
                ('estimated_space', models.CharField(max_length=1000)),
                ('testing_tool', models.CharField(max_length=1000)),
                ('assessment_result', models.CharField(max_length=1000, null=True)),
                ('risk_analysis', models.CharField(max_length=1000, null=True)),
                ('test_conclusion', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='VersionEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join_time', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sgin.event')),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sgin.version')),
            ],
            options={
                'db_table': 'sgin_version_events',
            },
        ),
        migrations.AddField(
            model_name='version',
            name='events',
            field=models.ManyToManyField(through='sgin.VersionEvent', to='sgin.event'),
        ),
        migrations.CreateModel(
            name='GuestEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join_time', models.DateTimeField(auto_now_add=True)),
                ('is_sgin', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sgin.event')),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sgin.guest')),
            ],
            options={
                'db_table': 'sgin_guest_events',
            },
        ),
        migrations.AddField(
            model_name='guest',
            name='events',
            field=models.ManyToManyField(through='sgin.GuestEvent', to='sgin.event'),
        ),
        migrations.CreateModel(
            name='DemandEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join_time', models.DateTimeField(auto_now_add=True)),
                ('demand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sgin.demand')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sgin.event')),
            ],
            options={
                'db_table': 'sgin_demand_events',
            },
        ),
        migrations.AddField(
            model_name='demand',
            name='events',
            field=models.ManyToManyField(through='sgin.DemandEvent', to='sgin.event'),
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('pid', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='sgin.city')),
            ],
        ),
    ]
